{"block": {"name": "code", "text": "<p>\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u0442 \u0432\u0435\u0441\u044c \u0430\u043b\u0444\u0430\u0432\u0438\u0442 \u0432 \u0434\u0432\u043e\u0439\u043d\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u043d\u0435\u0447\u0435\u0442\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u043e\u043d\u0430 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u044d\u0442\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0431\u0435\u0437 \u0447\u0438\u0441\u043b\u0430, \u0435\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0447\u0435\u0442\u043d\u043e\u0435, \u043e\u043d\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0443.<br></p><p>\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 <span class=\"wysiwyg-color-red\">\"\\n\"</span> \u043a\u0430\u0436\u0434\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0430 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. </p><p>\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:<br></p><p class=\"wysiwyg-text-align-left\"></p><pre><code>\"ahsg4u\\n\" ==&gt; ['a', 'h', 's', 'g', '4', 'u']\n\"shshs6\\n\" ==&gt; ['s', 'h', 's', 'h', 's', '6']\n\"dhsj0x\\n\" ==&gt; ['d', 'h', 's', 'j', '0', 'x']\n\u0432 \u0438\u0442\u043e\u0433\u0435\n[['a', 'h', 's', 'g', '4', 'u'],['s', 'h', 's', 'h', 's', '6'],['d', 'h', 's', 'j', '0', 'x']]</code></pre>", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include <stdio.h>\n\nint main(){\n\n    return 0;\n}"}, "code_templates_options": {}, "samples": [["BBxvrYx8Kx\nPaqIVe0CEG\nCgxersDv2w\nCplC0fegrA\nbChv4LOQaL\n", "BBxvrYx\nPaqIVe\nCgxersDv\nCplC\nbChv\n"], ["Q5AEYlzEKp\nonG9TgLyNj\nQ5uxlmVleG\n7uAXmyRjRx\nkMciuwrJ2C\n", "QAEYlzEKp\nonGTgLyNj\nQuxlmVleG\nuAXmyRjRx\nkMciuwrJ\n"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "# This is a sample Code Challenge\n# Learn more: https://stepik.org/lesson/9173\n# Ask your questions via support@stepik.org\nfrom random import shuffle\nimport random\nimport string\n\ndef convToArray(conv):\n    convT = ''.join(conv)\n    words = []\n    word = []\n    for i in convT:\n        if i == '\\n':\n            words.append(word)\n            word = []\n        else:\n            word.append(i)\n    return words\n\n\ndef Checker(words):\n    answer = ''\n    for word in words:\n        for l in word:\n            if l.isdigit():\n                if int(l) % 2 == 0:\n                    break\n                elif int(l) % 2 == 1:\n                    continue\n            else:\n                answer += l\n        answer += \"\\n\"\n    return answer\n\ndef generate():\n    test_case = []\n    for x in range(5):\n        test = ''\n        for i in range(5):\n            a = ''\n            for j in range(9):\n                a += random.choice(string.ascii_letters)\n            a += random.choice(string.digits)\n            aL = list(a)\n            shuffle(aL)\n            aS = ''.join(aL)\n            test += aS + '\\n'\n        test_case.append(test)\n    return test_case\n\ndef solve(words):\n    return Checker(convToArray(words))\n  \n\n\ndef check(reply, clue):\n    return str(reply) == str(clue)\n\n# def solve(dataset):\n#     a, b = dataset.split()\n#     return str(int(a) + int(b))", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 2, "templates_data": "::c\n\n#include <stdio.h>\n\nint main(){\n\n    return 0;\n}\n\n\n\n\n\n", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [], "are_all_tests_scored": false}, "subtitles": {}, "tests_archive": "/api/step-sources/545608/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "545608", "time": "2018-12-19T13:35:59.443814"}