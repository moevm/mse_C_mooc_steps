{"block": {"name": "code", "text": "\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0443\u0444\u0435\u0440\u0430(50 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432). \u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u044d\u0442\u0443 \u0441\u0442\u0440\u043e\u043a\u0443.<br>\n\n<div>\u041a\u043e\u043d\u0435\u0447\u043d\u043e, \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u0430\u043c\u044f\u0442\u044c \u043f\u043e\u0434 \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0430 1000000 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u043d\u0435\u0451, \u043d\u043e \u044d\u0442\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0435\u0441\u0442\u0438 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043f\u043e\u043b\u044c\u0437\u044b.</div>\n\n", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include <stdio.h>\n\nint main(){\n    //put your code\n    return 0;\n}"}, "code_templates_options": {}, "samples": [], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from random import choices, randint\nfrom string import ascii_letters\n\ndef generate():\n    test_cases = []\n    for _ in range(10):\n        length = randint(200, 10000)\n        test_cases.append(''.join(choices(ascii_letters + ' ', k=length))+'\\n')\n    return test_cases\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n\ndef solve(dataset):\n    return dataset", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 0, "templates_data": "::c\n#include <stdio.h>\n\nint main(){\n    //put your code\n    return 0;\n}", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [["Snake eel armoured catfish, great white shark lemon shark weatherfish redtooth triggerfish. Ghost knifefish turbot; sardine parasitic catfish; cobia turkeyfish gurnard; gouramie, smelt warmouth. Arapaima butterfly ray California smoothtongue featherfin knifefish, olive flounder.\n", "Snake eel armoured catfish, great white shark lemon shark weatherfish redtooth triggerfish. Ghost knifefish turbot; sardine parasitic catfish; cobia turkeyfish gurnard; gouramie, smelt warmouth. Arapaima butterfly ray California smoothtongue featherfin knifefish, olive flounder.\n"]]}, "subtitles": {}, "tests_archive": "/api/step-sources/543660/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "543660", "time": "2018-12-19T13:36:12.015455"}