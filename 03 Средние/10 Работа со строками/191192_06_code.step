{"block": {"name": "code", "text": "\n\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043b\u0438\u043d\u044b \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 500 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0412 \u0441\u0442\u0440\u043e\u043a\u0435 \u043c\u043e\u0433\u0443\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0441\u043b\u043e\u0432\u0430 \u0438 \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043a\u0430\u0436\u0434\u043e\u0435 \u0441\u043b\u043e\u0432\u043e \u0441 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438. \u0421\u0443\u043c\u043c\u0443 \u0447\u0438\u0441\u0435\u043b, \u043d\u0430\u0445\u043e\u0434\u044f\u0449\u0438\u0445\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432 16-\u0440\u0438\u0447\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439. \u0415\u0441\u043b\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0435\u0442 \u0447\u0438\u0441\u0435\u043b, \u0442\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 0.\n\n", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "int main() {\n    //put your code\n    return 0;\n}"}, "code_templates_options": {}, "samples": [], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from random import choices, randint, random\nfrom string import ascii_letters, digits\n\n\ndef generate():\n    test_cases = []\n    for i in range(30):\n        test_cases.append(' '.join([str(randint(10,1000)) if random() > 0.5 else ''.join(choices(ascii_letters, k=randint(10, 20))) for i in range(20)])+'\\n')\n    test_cases.append('\\n')\n    test_cases.append(''.join(choices(ascii_letters, k=randint(10, 20)))+'\\n')\n    test_cases.append(str(randint(10, 1000))+'\\n')\n    return test_cases\n\n\ndef solve(string):\n    string = string.strip().split()\n    res = ''\n    summ = 0\n    for obj in string:\n        if obj.isdigit():\n            summ += int(obj)\n        else:\n            res += obj + '\\n'\n    res += '{:x}'.format(summ)\n    return res\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 0, "templates_data": "::c\n\nint main() {\n    //put your code\n    return 0;\n}", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": []}, "subtitles": {}, "tests_archive": "/api/step-sources/543671/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "543671", "time": "2018-12-19T13:36:09.478613"}