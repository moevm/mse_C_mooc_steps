{"block": {"name": "code", "text": "\n\n\u041d\u0430\u0439\u0442\u0438 \u0441\u043b\u043e\u0432\u043e, \u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435 \u043f\u043e\u0434 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0435\u0433\u043e \u043f\u0435\u0440\u0432\u0443\u044e \u0431\u0443\u043a\u0432\u0443. \u041d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 0.\n\n", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "char find_word_by_num(char *input, int count)\n{\n    //put your code\n}"}, "code_templates_options": {}, "samples": [["16 1\ntest etest ttest\n", "e"], ["16 2\ntest etest ttest\n", "t"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from random import randint, choices\nfrom string import ascii_letters\nfrom re import sub\n\n\ndef generate():\n    cases = []\n    for i in range(15):\n        case = ''.join(choices(ascii_letters+' '*10, k=randint(30,190)))\n        case = sub(r' +', ' ', case)\n        if(case[0]==' '):\n            case = list(case)\n            del case[0]\n            case = ''.join(case)\n        cases.append(str(len(case))+' '+str(randint(0,len(case.split())-1))+'\\n'+case+'\\n')\n    case = ''.join(choices(ascii_letters, k=randint(10,20)))\n    cases += [str(len(case))+' '+str(0)+'\\n'+case+'\\n']\n    return cases\n\n\ndef solve(dataset):\n    dataset = dataset.strip().splitlines()\n    num, words = int(dataset[0].split()[1]), dataset[1].split()\n    return words[num][0]\n\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 2, "templates_data": "::c\n::header\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n::code\nchar find_word_by_num(char *input, int count)\n{\n    //put your code\n}\n::footer\nint main(){\n    int len, num_of_word;\n    scanf(\"%d %d\\n\", &len, &num_of_word);\n    char *input = (char *)malloc((++len)*sizeof(char));\n    fgets(input, len, stdin);\n    char c = find_word_by_num(input, num_of_word);\n    printf(\"%c\\n\", c);\n    free(input);\n    return 0;\n}", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [["16 1\ntest etest ttest\n", "e\n"], ["16 2\ntest etest ttest\n", "t"]], "are_all_tests_scored": false}, "subtitles": {}, "tests_archive": "/api/step-sources/551311/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "551311", "time": "2018-12-19T13:36:10.922063"}