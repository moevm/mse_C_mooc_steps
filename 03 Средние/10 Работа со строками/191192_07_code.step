{"block": {"name": "code", "text": "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0441\u043b\u043e\u0432\u043e, \u0442.\u0435. \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043f\u0440\u043e\u0431\u0435\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.<div>\u041f\u0430\u043c\u044f\u0442\u044c \u0434\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u043e\u043a\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438.</div><div>\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 #include &lt;stdio.h&gt;, #include &lt;stdlib.h&gt;, #include &lt;string.h&gt; \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e.</div>\n\n", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "char *remove_last_word(char *input)\n{\n\n}"}, "code_templates_options": {}, "samples": [["It's sample test\n", "It's sample"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from random import randint, choices\nfrom string import ascii_letters\ndef generate():\n    cases = []\n    for i in range(15):\n        cases.append(''.join(choices(ascii_letters+' ', k=randint(30,190)))+'\\n')\n    cases += [\"\\n\", ''.join(choices(ascii_letters, k=randint(10,20)))+'\\n', \\\n        ''.join(choices(ascii_letters, k=randint(5,10)))+' '+''.join(choices(ascii_letters, k=randint(5,10)))+'\\n']\n    return cases\n\ndef solve(dataset):\n    return ' '.join(dataset.strip().split()[0:-1])\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 1, "templates_data": "::c\n::header\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n::code\nchar *remove_last_word(char *input)\n{\n    \n}\n::footer\nint main(){\n    char input[200];\n    fgets(input,200,stdin);\n    input[strlen(input)-1] = '\\0';\n    char *res =  remove_last_word(input);\n    printf(\"%s\\n\", res);\n    free(res);\n    return 0;\n}", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [["It's sample test\n", "It's sample\n"]], "are_all_tests_scored": false}, "subtitles": {}, "tests_archive": "/api/step-sources/551310/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "551310", "time": "2018-12-19T13:36:10.624816"}