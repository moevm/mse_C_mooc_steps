{"block": {"name": "code", "text": "\n\n\u0412\u043e \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n\n, \u0434\u043b\u0438\u043d\u043d\u043e\u0439 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 200 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043c\u0435\u0436\u0434\u0443 \u043f\u0435\u0440\u0432\u044b\u043c \u0438 \u0432\u0442\u043e\u0440\u044b\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0437\u043d\u0430\u043a\u043e\u043c. \u0421\u0430\u043c\u0438 \u0437\u043d\u0430\u043a\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.\n\n", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include <stdio.h>\n\nint main(){\n    //put your code\n    return 0;\n}"}, "code_templates_options": {}, "samples": [["It's? Test? String ", "It's?? String "]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from string import ascii_letters\nfrom random import randint, choices\nfrom re import search\n\ndef generate():\n    cases = []\n    for i in range(10):\n        case = list(choices(ascii_letters, k=randint(20,190)))\n        first, second = randint(0, len(case)-1), randint(0, len(case)-1)\n        while abs(first - second) < 2:\n            second = randint(0, len(case)-1)\n        case[first], case[second] = '?', '?'\n        cases.append(''.join(case)+'\\n')\n    case = list(choices(ascii_letters, k=randint(20,190)))\n    ind = randint(0, len(case)-1)\n    if not ind:\n        ind += 1\n    case[ind-1], case[ind] = '?', '?'\n    cases.append(''.join(case)+'\\n')\n    case = list(choices(ascii_letters, k=randint(30,50)))\n    case[10], case[15], case[20] = '?', '?', '?'\n    cases.append(''.join(case)+'\\n')\n    return cases\n\ndef solve(dataset):\n    m_obj = search(r\"\\?[\\w ]*\\?\", dataset.strip())\n    return dataset.replace(dataset[m_obj.start():m_obj.end()], '??', 1);\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 1, "templates_data": "::c\n#include <stdio.h>\n\nint main(){\n    //put your code\n    return 0;\n}", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [["It's? Test? String ", "It's?? String "]]}, "subtitles": {}, "tests_archive": "/api/step-sources/560942/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "560942", "time": "2018-12-19T13:36:11.184597"}