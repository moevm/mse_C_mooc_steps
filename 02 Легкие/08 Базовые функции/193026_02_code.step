{"block": {"name": "code", "text": "\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u043e\u0440\u043e\u043d \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430.<div>Note:</div><div><ul><li>\u0432\u0430\u0448 \u043e\u0442\u0432\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d \u0434\u043e \u0434\u0432\u0443\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439</li><li>\u0435\u0441\u043b\u0438 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u0440\u043d\u0438\u0442\u0435 <span class=\"wysiwyg-color-red\">\"Invalid Trianlge\"</span></li></ul></div>", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include <stdio.h>\n\nint main(){\n\n    return 0;\n}"}, "code_templates_options": {}, "samples": [["6 5 5", "12.00"], ["10 6 20", "Invalid Triangle"], ["30 38 37", "515.25"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "# This is a sample Code Challenge\n# Learn more: https://stepik.org/lesson/9173\n# Ask your questions via support@stepik.org\nimport random\n\ndef generate():\n    test_cases = []\n    for i in range(10):\n        a = random.randrange(1, 50)\n        b = random.randrange(1, 50)\n        c = random.randrange(1, 50)\n        test_cases.append(\"{} {} {}\".format(a, b, c))\n    return test_cases\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n\ndef solve(dataset):\n    # calculate the semi-perimeter\n    a = int(dataset.split(' ')[0])\n    b = int(dataset.split(' ')[1])\n    c = int(dataset.split(' ')[2])\n    if (a + b <= c) or (a + c <= b) or (b + c <= a) : \n        return \"Invalid Triangle\"\n    else:      \n        s = (a + b + c) / 2\n        # calculate the area\n        d = abs(s - a)\n        e = abs(s - b)\n        f = abs(s - c)\n        area = (s * d * e * f) ** 0.5\n        return str('%0.2f' % round(area, 2))", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 3, "templates_data": "::c\n\n#include <stdio.h>\n\nint main(){\n\n    return 0;\n}\n", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [["6 5 5", "12.00"]]}, "subtitles": {}, "tests_archive": "/api/step-sources/548683/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "548683", "time": "2018-12-19T13:35:51.459904"}