{"block": {"name": "code", "text": "Write a program that removes the comment in a code. There are basically two types of comments in C;<div>1. Line comment noted by \u00a0<b><span class=\"wysiwyg-color-green\">'//'</span></b></div><div>2. Multiple line comment that begins with<span class=\"wysiwyg-color-green\"> '/*'</span> and ends with <span class=\"wysiwyg-color-green\">'*/'</span></div>", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include <stdio.h>\n\nint main(){\n\n    return 0;\n}"}, "code_templates_options": {}, "samples": [["//bmLYkvjfmrXElMY6\nyLz//wQbPWOtOivjc3\nhPRt/*Lxf*/LyA;BdeUg3\n/*cClVoUrxaagtOmv2\nqqkbQaxdixNrySz7\ntsxXOmdvlfuszN*/Z7;\n", "\nyLz\nhPRtLyA;BdeUg3\nZ7;\n"], ["//GHqaEtowtyLisfU5\nyqHAqUwgWsDBL//JJ6\nYY/*OAvqoG*/Hn;cmmzf0\nf/*bTFkhGmVRDfkKn6\nzKSlXzxgazpPYzR7\narxRRUufT*/KXIaoo0;\n", "\nyqHAqUwgWsDBL\nYYHn;cmmzf0\nfKXIaoo0;\n"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "# This is a sample Code Challenge\n# Learn more: https://stepik.org/lesson/9173\n# Ask your questions via support@stepik.org\nimport random\nimport string\n\n\ndef generate():\n    test_case = []\n    for x in range(5):\n        test = ''\n        for i in range(6):\n            a = ''\n            for j in range(15):\n                a += random.choice(string.ascii_letters)\n            a += random.choice(string.digits)\n            aL = list(a)\n            if i == 0:\n                aL.insert(0, \"//\")\n            if i == 1:\n                aL.insert(random.randint(0, 14), \"//\")\n            if i == 2:\n                aL.insert(random.randint(0, 5), \"/*\")\n                aL.insert(random.randint(6, 10), \"*/\")\n                aL.insert(random.randint(11, 14), \";\")\n            if i == 3:\n                aL.insert(random.randint(0, 7), \"/*\")\n            if i == 5:\n                aL.insert(random.randint(7, 14), \"*/\")\n                aL.append(\";\")\n            aS = ''.join(aL)\n            test += aS + '\\n'\n        test_case.append(test)\n    return test_case\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n\ndef solve(content):\n    block_comment = False\n    line_comment = False\n    probably_a_comment = False\n    result = []\n    for character in content:\n        if not line_comment and not block_comment and not probably_a_comment and character == '/':\n            probably_a_comment = True\n            continue\n\n        if block_comment and character == '*':\n            probably_a_comment = True\n            continue\n\n        if line_comment and character == '\\n':\n            line_comment = False\n            result.append('\\n')\n        elif block_comment and probably_a_comment and character == '/':\n            block_comment = False\n        elif not line_comment and not block_comment:\n            if probably_a_comment:\n                if character == '/':\n                    line_comment = True\n                elif character == '*':\n                    block_comment = True\n                else:\n                    result.append('/')  # Append the / we skipped when flagging that it was probably a comment starting\n                    result.append(character)\n            else:\n                result.append(character)\n        probably_a_comment = False\n\n    return ''.join(result)", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 2, "templates_data": "::c\n\n#include <stdio.h>\n\nint main(){\n\n    return 0;\n}\n\n\n\n", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [], "are_all_tests_scored": false}, "subtitles": {}, "tests_archive": "/api/step-sources/544512/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "544512", "time": "2018-12-19T13:36:24.428773"}