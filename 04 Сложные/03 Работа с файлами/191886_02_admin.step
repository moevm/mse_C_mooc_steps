{"block": {"name": "admin", "text": "\n\n\u0412\u0430\u043c \u0434\u0430\u0435\u0442\u0441\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u0444\u0430\u0439\u043b input.txt, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0435\u043f\u0443\u0441\u0442\u044b\u0445 \u0441\u0442\u0440\u043e\u043a(\u043d\u0435 \u0431\u043e\u043b\u0435\u0435 50, \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 10 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432).<br>\u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043d\u0435\u0433\u043e \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u0444\u0430\u0439\u043b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0442\u0435 \u0436\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.<div>\u0424\u0430\u0439\u043b \u0441 \u043a\u043e\u0434\u043e\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f: inverse.c, \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c - result.txt</div><div>\u041f\u0440\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435/\u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \"home/box/filename\"</div><div><b>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430:</b></div><div>ab<br><b></b>c<br>dde<br>ff <br></div><div><br></div><div><b>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430:<br></b><b></b>ff<b><br></b>dde<br>c<br>ab </div>\n\n", "video": null, "animation": null, "options": {"time_limit": 3600}, "subtitle_files": [], "source": {"image_id": 3, "memory": 64, "is_bootstrap": false, "bootstrap_script": "# Use this script to configure a virtual machine for this challenge.\n# It is run for every machine created prior to assigning it to a user.\n# A machine is considered as configured and can be assigned to a user\n# only if this script exits with a zero status.\n# The execution time is limited to 3 minutes.\nset -e  # Exit immediately if any command exits with a non-zero status.\n\n# Type your Bash commands here...\n# ...", "test_scenario": "from string import ascii_letters\nfrom random import randint, choice\nfrom re import sub\ntest_case = '\\n'.join([''.join([choice(ascii_letters) for i in range(randint(1,5))]) for i in range(randint(20,50))])+'\\n'\n\ndef test_connection(s):\n    assert s.run('true').succeeded, \"Could not connect to server\"\n\ndef test_c_file_exist(s):\n    assert s.run('test -f /home/box/inverse.c').succeeded, \"Could not find c file\"\n    \ndef test_compile_success(s):\n    s.run('gcc -std=c99 /home/box/inverse.c -o /home/box/inverse 2> com.txt')\n    assert s.run('test -f /home/box/inverse').succeeded, 'Could not find executable file'\n    \ndef test_result_file_exist(s):\n    s.run('echo \"{}\" > /home/box/input.txt'.format(test_case))\n    s.run('/home/box/inverse')\n    assert s.run('test -f /home/box/result.txt').succeeded, \"Could not find result file\"\n\ndef test_file_content(s):\n    file_content = s.run('cat /home/box/result.txt').strip().splitlines()\n    res = list(reversed(test_case.strip().splitlines()))\n    assert res == file_content, \"Incorrect reverse\""}, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "551313", "time": "2018-12-19T13:36:19.168450"}