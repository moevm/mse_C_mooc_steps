{"block": {"name": "code", "text": "(\u0421\u0440\u0435\u0434\u043d\u0438\u0439) \u041d\u0430\u0439\u0442\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0434\u043b\u0438\u043d\u044b 15, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0436\u0434\u0443 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e \u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include <stdio.h>\n\nint main(){\n    //put your code\n    return 0;\n}"}, "code_templates_options": {}, "samples": [["1 3 4 5 6 7 8 -10 -9 -7 -6 -5 -4 -3 -2\n", "20160"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from numpy.random import randint as npr\nfrom operator import mul\nfrom functools import reduce\n\ndef find_modulo_max_min(lst):\n    mn, mx = 0, 0\n    for i in range(len(lst)):\n        if abs(lst[i]) > abs(lst[mx]):\n            mx = i\n        elif abs(lst[i]) < abs(lst[mn]):\n            mn = i\n    return mx, mn\n\ndef generate():\n    cases = []\n    for i in range(10):\n        case = list(npr(-10, 10, 15))\n        mx, mn = find_modulo_max_min(case)\n        while abs(mx - mn) < 2 or len(case) != 15 or 0 in case:\n            case = list(set(npr(-10, 10, 15)))\n            mx, mn = find_modulo_max_min(case)\n        cases.append(' '.join(map(str, case)) + '\\n')\n    case = list(npr(-10, 10, 15))\n    mx, mn = find_modulo_max_min(case)\n    if (mn > mx):\n        mx, mn = mn, mx\n    while abs(mx - mn) < 3 or len(case) != 15:\n        case = list(npr(-3, 3, 15))\n        mx, mn = find_modulo_max_min(case)\n    case[(mx+mn)//2] = 0\n    cases.append(' '.join(map(str, case)) + '\\n')\n    return cases\n\ndef solve(dataset):\n    dataset = list(map(int, dataset.strip().split()))\n    mx, mn = find_modulo_max_min(dataset)\n    if mn > mx:\n        return str(reduce(mul, dataset[mx+1:mn]))\n    return str(reduce(mul, dataset[mn+1:mx]))\n    \n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 1, "templates_data": "::c\n#include <stdio.h>\n\nint main(){\n    //put your code\n    return 0;\n}", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": []}, "subtitles": {}, "tests_archive": "/api/step-sources/551321/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "551321", "time": "2018-12-19T13:35:29.904091"}