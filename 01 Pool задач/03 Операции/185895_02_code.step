{"block": {"name": "code", "text": "<p>(\u041b\u0435\u0433\u043a\u0438\u0439) \u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u0434\u0430\u044e\u0442\u0441\u044f \u0442\u0440\u0438 \u0447\u0438\u0441\u043b\u0430. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0435\u0440\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u043d\u0430\u0439\u0442\u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e.\n\n<br></p>", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include <stdio.h>\n\nint main() {\n  // put your code here\n  return 0;\n}"}, "code_templates_options": {}, "samples": [["7 29 81\n", "7"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from random import randint\n\nmax_modulo = 100\n\ndef generate():\n    tests = []\n    for i in range(20):\n        vals = '{} {} {}\\n'.format(str(randint(-max_modulo, max_modulo)), str(randint(-max_modulo, max_modulo)), str(randint(-max_modulo, max_modulo)))\n        tests.append(vals)\n    return tests\n\n\ndef solve(dataset):\n    dataset = dataset.strip().split()\n    return str(min(int(dataset[0]),int(dataset[1]),int(dataset[2])))\n\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 1, "templates_data": "::c\n#include <stdio.h>\n\nint main() {\n  // put your code here\n  return 0;\n}\n\n\n\n\n\n\n\n\n\n\n", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": []}, "subtitles": {}, "tests_archive": "/api/step-sources/556464/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "556464", "time": "2018-12-19T13:35:20.383716"}