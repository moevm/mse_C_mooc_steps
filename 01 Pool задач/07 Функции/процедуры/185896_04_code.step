{"block": {"name": "code", "text": "<p>\u0427\u0438\u0441\u043b\u043e \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0439.<br>\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c \u0443 \u0432\u0430\u0441 \u0438\u043c\u0435\u0435\u0442\u0441\u044f <b>N</b> \u0445\u043e\u043a\u043a\u0435\u0438\u0441\u0442\u043e\u0432. \u0418\u0437 \u043d\u0438\u0445 \u043d\u0443\u0436\u043d\u043e \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438\u0437 <b>K</b> \u0447\u0435\u043b\u043e\u0432\u0435\u043a. \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c? \u041d\u0430 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442 - \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0439.\u00a0\n\n<i>\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u043e\u0442\u0432\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0441 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u043e \u0434\u0432\u0443\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439.</i>\n\n</p><p>\n\n<b></b></p>\n\n<p><b>\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:</b><br>\u0414\u0432\u0430 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 <b>N</b>, <b>K</b>, <b>(K&lt;N)</b>,<b> N&lt;12</b>.</p><p><b>\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435: </b><br>\u041e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e, \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0439.</p><p><span class=\"wysiwyg-color-blue\"><b>\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438:</b> </span><br>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0434\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: <i>factorial(p)</i> \u0438 <i>combin(n, k)</i>. </p>\n\n<p></p>", "video": null, "animation": null, "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c": {"time": 5, "memory": 256}}, "code_templates": {"c": "#include<stdio.h>\nint factorial(int p){\n    //put your code\n}\nint combin(int n, int k){\n    //put your code\n}\n\nint main(void){\n    int n = 0, k = 0;\n    scanf(\"%d%d\",&n,&k);\n\n    printf(\"%d\",combin(n,k));\n\n    return 0;\n}"}, "code_templates_options": {}, "samples": [["5 3", "10.00"]], "is_run_user_code_allowed": true}, "subtitle_files": [], "source": {"code": "from random import randint\n\nmax_modulo = 12\n\ndef generate():\n    tests = []\n    for i in range(5):\n        vals = '{} {}\\n'.format(str(randint(0, max_modulo)), str(randint(0, 10)))\n        tests.append(vals)\n    return tests\n\n\ndef factorial(n):\n    result = 1\n    for i in range(1, n+1):\n        result *= i\n    return result\n\n\ndef solve(dataset):\n    dataset = dataset.strip().split()\n    n = int(dataset[0])\n    k = int(dataset[1])\n    r = format(factorial(n)/(factorial(k)*factorial(n-k)), '.2f')\n    return str(r)\n\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()", "execution_time_limit": 5, "execution_memory_limit": 256, "samples_count": 1, "templates_data": "::c\n#include<stdio.h>\nint factorial(int p){\n    //put your code\n}\nint combin(int n, int k){\n    //put your code\n}\n\nint main(void){\n    int n = 0, k = 0;\n    scanf(\"%d%d\",&n,&k);\n\n    printf(\"%d\",combin(n,k));\n\n    return 0;\n}\n\n\n\n\n", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "is_run_user_code_allowed": true, "manual_time_limits": [], "manual_memory_limits": [], "test_archive": [], "test_cases": [["5 3", "10.00"]]}, "subtitles": {}, "tests_archive": "/api/step-sources/558383/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "558383", "time": "2018-12-19T13:35:26.132670"}